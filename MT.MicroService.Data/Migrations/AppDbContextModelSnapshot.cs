// <auto-generated />
using MT.MicroService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MT.MicroService.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("MT.MicroService.Core.Entity.ContactInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("UUID")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("UUID");

                    b.ToTable("ContactInfos");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Email = "xyz@any.com",
                            Location = "istanbul",
                            PhoneNumber = "05554443231",
                            UUID = 1
                        },
                        new
                        {
                            id = 2,
                            Email = "xyz@any.com",
                            Location = "Ankara",
                            PhoneNumber = "05554443231",
                            UUID = 1
                        });
                });

            modelBuilder.Entity("MT.MicroService.Core.Entity.Person", b =>
                {
                    b.Property<int>("UUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("UUID");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            UUID = 1,
                            Company = "xyz",
                            Name = "Demir",
                            SurName = "Çelik"
                        });
                });

            modelBuilder.Entity("MT.MicroService.Core.Entity.ContactInfo", b =>
                {
                    b.HasOne("MT.MicroService.Core.Entity.Person", "Person")
                        .WithMany("ContactInfos")
                        .HasForeignKey("UUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("MT.MicroService.Core.Entity.Person", b =>
                {
                    b.Navigation("ContactInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
